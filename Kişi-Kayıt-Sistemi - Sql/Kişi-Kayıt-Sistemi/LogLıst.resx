<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="logModelBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFC4sWTA6UrksPk/lMEJT/TBCU/0wQlP9MEJT/Sw+S/0cP
        i/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YP
        h/9FDobnQw6GSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsPk7ZMEJT/TBCU/0wQlP9MEJT/Sw+T/0kP
        jv9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YP
        h/9GD4f/Rg+H/0YPh/9EDobeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATA+T7kwQlP9MEJT/TBCU/0oP
        kf9HD4n/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YP
        h/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0UOhv4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLDpPvTBCU/0sP
        k/9ID4z/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YP
        h/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsO
        k+9KD5D/Rg+I/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YP
        h/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/Rg+H/0YPh/9GD4f/HABVCTIAZ34xAWiuMwFnrzMB
        Z68zAWevOQVz+jgGcf84BnH/OAZx/zgGcf84BnH/OAZx/zgGcf84BnH/OAZx/zgGcf84BnH/OAZx/zgG
        cf84BnH/OAZx/zgGcf84BnH/OAZx/zkGcv8+CXr/RQ6G/0YPh/9GD4f/Rg+H/0YPh/8yAWamMwJo/zMC
        aP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMC
        aP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8+CXr/Rg+H/0YPh/9GD4f/Rg+H/zMB
        Z/ozAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMC
        aP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zgFcP9GD4f/Rg+H/0YP
        h/9GD4f/MwJo/zMCaP8zAmj/MwJo/zMCaP/Owtr/5d/s/+Xf7P/l3+z/jnOr/1Ytgv/Owtv/+/r8//Px
        9v+tmcL/OQps/zMCaP9NInv/xLbT//Xz9//18/j/zsPb/2pGkP8zAmj/MwJo/zMCaP8zAmj/NwVv/0YP
        h/9GD4f/Rg+H/0YPh/8zAmj/MwJo/zMCaP8zAmj/MwJo//j3+v+SeK7/WTGE/1kxhP9DFnT/5uDs/7al
        yf8/EXH/Vi2C/+fi7f+jjbv/NARp/93V5v+3pcn/Ogtt/zcHa/+fiLj/187h/zMCaP8zAmj/MwJo/zMC
        aP83BW//Rg+H/0YPh/9GD4f/Rg+H/zMCaP8zAmj/MwJo/zMCaP8zAmj/+Pf6/3lZm/8zAmj/MwJo/2E7
        iv//////Sh95/zMCaP8zAmj/kniu/+bg7P9aMoT//////1Amff85Cmz/oYq5/8e51f/YzuL/MwJo/zMC
        aP8zAmj/MwJo/zcFb/9GD4f/Rg+H/0YPh/9GD4f/MwJo/zMCaP8zAmj/MwJo/zMCaP/49/r/eVmb/zMC
        aP8zAmj/bEmS//////88DW//MwJo/zMCaP+EZqT/7+zz/2VAjf//////QxZ0/zUEaf97W53/f2Cg/2E8
        iv8zAmj/MwJo/zMCaP8zAmj/NwVv/0YPh/9GD4f/Rg+H/0YPh/8zAmj/MwJo/zMCaP8zAmj/MwJo//j3
        +v95WZv/MwJo/zMCaP9IHHf//Pz9/3NSmP8zAmj/MwJo/72tzv/Kvdj/QRRy//n4+/95WZz/MwJo/zMC
        aP+Lb6n/hmml/zMCaP8zAmj/MwJo/zMCaP83BW//Rg+H/0YPh/9GD4f/Rg+H/zMCaP8zAmj/MwJo/zMC
        aP8zAmj/9/b5/3hXm/8zAmj/MwJo/zMCaP+bgrT/9fP4/7Gfxf/Iu9b/8/D2/144iP8zAmj/i2+p//Tx
        9v+plL//r5zE//n4+/9yUJb/MwJo/zMCaP8zAmj/MwJo/zcFb/9GD4f/Rg+H/0YPiP9KD5D/MgFo9zMC
        aP8zAmj/MwJo/zMCaP94V5v/QRRz/zMCaP8zAmj/MwJo/zMCaP9dNof/iWyn/4Bhof9FGHX/MwJo/zMC
        aP8zAmj/Uil//4Vopf+Gaqb/Uih//zMCaP8zAmj/MwJo/zMCaP8zAmj/OAVw/0YPh/9JD43/Sw+T/0wQ
        lP8yAWeXMwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMC
        aP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP8zAmj/MwJo/zMCaP9BCn//Sw+S/0wQ
        lP9MEJT/TBCU/wAAVQMyAGdgMgFojjEBZ48xAWePMQFnjzwHevg9CHv/PQh7/z0Ie/89CHv/PQh7/z0I
        e/89CHv/PQh7/z0Ie/89CHv/PQh7/z0Ie/89CHv/PQh7/z0Ie/89CHv/PQh7/z0Ie/8+CHv/RQyH/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASw6T70wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLDpPvTBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsO
        k+9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASw6T70wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0sPk/8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABLDpPvTBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0sQk/9JD4//Rg+I/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsOk+9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9LD5L/Rw+K/0YP
        h/9GD4f/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASw6T70wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9LD5P/SQ+O/0YP
        h/9GD4f/Rg+H/0YPh/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLDpPvTBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/Rw2M/zwH
        d/84BnH/OAZx/zgGcf84BnH/OgZ0xQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEsOk+9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0QL
        hv8zAmn/MwJo/zMCaP8zAmj/MwJo/zIBaLouAFwLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASw6T70wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9LD5L/NAJq/zMCaP8zAmj/MwJo/zMCaP8zAWivJABtBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABLDpPvTBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0gOjv8zAmj/MwJo/zMCaP8zAmj/MgFoowAAPwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEsOk+9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/SA6O/zMCaP8zAmj/MwJo/zIBaJcAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATA+T7kwQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9IDo7/MwJo/zMCaP8yAWiJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLD5O2TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0gOjv8yAmf+MQJnewAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEULixZMDpSuSw+T+UwQlP9MEJT/TBCU/0wQ
        lP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/TBCU/0wQlP9MEJT/SA6P/TMAaW0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAAPwAAAD8AAAA/AAAAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwA
        AAD8AAAB/AAAA/wAAAf8AAAf/AAAP/wAAH8=
</value>
  </data>
</root>